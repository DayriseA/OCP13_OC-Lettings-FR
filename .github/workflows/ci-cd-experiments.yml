name: CI/CD experiments

on:
  push:
    branches:
      - ci-testing
      - ci-cd-experiments

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    env:
      DEBUG: 'True'
      DJANGO_SECRET_KEY: 'supersecret'
      DB_NAME: 'postgres'
      DB_USER: 'postgres'
      DB_PASSWORD: 'postgres'
      DB_HOST: 'localhost'

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - 
        name: Checkout code
        uses: actions/checkout@v4

      - 
        name: Install poetry
        run: pipx install poetry

      - 
        name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'poetry'

      - 
        name: Install dependencies
        run: poetry install

      - 
        name: Run linting
        run: poetry run flake8

      - 
        name: Run tests
        run: poetry run pytest --cov=. --cov-fail-under=80

  containerize-and-push:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.ref == 'refs/heads/ci-cd-experiments'

    steps:
      - 
        name: Checkout code
        uses: actions/checkout@v4

      - 
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      -
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}

      - 
        name: Extract metadata for web
        id: meta-web
        uses: docker/metadata-action@v5
        with:
          images: ${{ vars.DOCKERHUB_USERNAME }}/oc_lettings_web
          tags: |
            type=sha
            type=raw,value=latest

      -
        name: Extract metadata for nginx
        id: meta-nginx
        uses: docker/metadata-action@v5
        with:
          images: ${{ vars.DOCKERHUB_USERNAME }}/oc_lettings_nginx
          tags: |
            type=sha
            type=raw,value=latest

      -
        name: Build and push web image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta-web.outputs.tags }}

      -
        name: Build and push nginx image
        uses: docker/build-push-action@v5
        with:
          context: ./nginx
          file: ./nginx/Dockerfile
          push: true
          tags: ${{ steps.meta-nginx.outputs.tags }}

